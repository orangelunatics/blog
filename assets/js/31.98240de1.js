(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{495:function(t,s,n){"use strict";n.r(s);var a=n(23),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"others"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#others"}},[t._v("#")]),t._v(" others")]),t._v(" "),n("h2",{attrs:{id:"git"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" git")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://gitee.com/progit/3-Git-%E5%88%86%E6%94%AF.html#3.5-%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF",target:"_blank",rel:"noopener noreferrer"}},[t._v("pro git 文档"),n("OutboundLink")],1),n("br"),t._v("\n1、git pull"),n("br"),t._v("\n用于从远程获取代码并合并本地的版本。"),n("br"),t._v("\ngit pull 其实就是 git fetch 和 git merge FETCH_HEAD 的简写。"),n("br"),t._v("\n2、git stash"),n("br"),t._v("\n把当前分支的更改暂存到缓冲区。实际开发很常用，比如正在写需求，群里突然说之前有个 bug 需要改..."),n("br"),t._v("\n改好之后，就可以 pop 出来，再清除缓存的记录即可。"),n("br"),t._v("\n3、rebase 衍合与 merge 合并区别："),n("br"),t._v("\nmerge: git 自动找到最佳的位置生成新的结点进行合并，git 分支仍然为两条，git 流程不清晰"),n("br"),t._v("\nrebase: 根据当前分支 1 后续的历次提交对象，生成一系列文件补丁，然后以基底分支（也就是主干分支 master）最后一个提交对象为新的出发点，逐个应用之前准备好的补丁文件，最后会生成一个新的合并提交对象，从而改写当前分支 1 的提交历史，使它成为 master 分支的直接下游，优点：git 流程清晰"),n("br"),t._v("\n注："),n("br"),t._v("\n· rebase 不是复制之前的 feature commit，而是产生新的 commit hash 值"),n("br"),t._v("\n· rebase 还经常用来合并 commit~"),n("br"),t._v("\n4、git pull --rebase：用于多人开发同一分支"),n("br"),t._v("\n5、git log --oneline: git log 的简洁版本"),n("br"),t._v("\n6、git log --graph --oneline --decorate：看 graph 图"),n("br"),t._v("\n7、git add 的各种区别")]),t._v(" "),n("ul",[n("li",[t._v("git add . "),n("strong",[t._v("当前目录")]),t._v("下的所有变更")]),t._v(" "),n("li",[t._v("git add --all/-A (gaa) "),n("strong",[t._v("当前项目")]),t._v("的所有变更")]),t._v(" "),n("li",[t._v("git add -u 不包括新增文件")]),t._v(" "),n("li",[t._v("git add * "),n("strong",[t._v("当前目录")]),t._v("下的所有变更，不包括.开头文件")])]),t._v(" "),n("h2",{attrs:{id:"npm"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[t._v("#")]),t._v(" npm")]),t._v(" "),n("p",[t._v("1、npm 与 npx 区别：")]),t._v(" "),n("p",[t._v("npm -g 会全局安装包，一直存在本机中；而 npx 会安装在临时安装包中，项目初始化完成后就删除，避免污染")]),t._v(" "),n("p",[t._v("2、nvm")]),t._v(" "),n("p",[t._v("3、npm"),n("br"),t._v("\nNode Package Manager node.js 的包管理工具")]),t._v(" "),n("p",[t._v("4、npm 命令简写"),n("br"),t._v("\nnpm install 和 npm i 是一样"),n("br"),t._v("\n--save 和 -S 是一样"),n("br"),t._v("\n--save-dev 和 -D 是一样的"),n("br"),t._v("\n-S, --save 安装包信息将加入到 dependencies（生产阶段的依赖,也就是项目运行时的依赖，就是程序上线后仍然需要依赖, 开发和生产都需要）"),n("br"),t._v("\n-D, --save-dev 安装包信息将加入到 devDependencies（开发阶段的依赖，就是我们在开发过程中需要的依赖，只在开发阶段起作业的）"),n("br"),t._v("\npeerDependency 就可以避免类似的核心依赖库被重复下载的问题")]),t._v(" "),n("p",[t._v("5、package-lock.json"),n("br"),t._v("\n作用：锁定版本+显示模块的依赖关系"),n("br"),t._v("\n不同环境拉取同一个项目的依赖保证了版本的一致性。")]),t._v(" "),n("p",[t._v("6、npm i --production"),n("br"),t._v("\n作用：只安装 dependencies 即生产环境下的包的 node_modules 而不安装 devDependencies 即开发环境下的包")]),t._v(" "),n("p",[t._v("7、npm view 模块名字 versions"),n("br"),t._v("\n查看包的所有版本 然后想更换版本可直接输入 npm i jquery@3.5.1 -S")]),t._v(" "),n("p",[t._v('8.版本号前面的^ eg:"stylus": "^0.54.8",'),n("br"),t._v("\nnode package 的版本号解析：0.54.8"),n("br"),t._v("\n① 主版本号(大更新)major:0, 次版本号(添加功能)minor:54, 补丁(修 bug)patch: 8"),n("br"),t._v("\n②^表示在进行包的安装 npm install 或升级时 npm update，只锁定主版本号，次版本号和补丁号升级为主版本号下的最新值"),n("br"),t._v("\n③~表示锁定主版本号和次版本号，patch 取最新"),n("br"),t._v("\n④ 如果前面不加符号，则安装时锁定所有版本"),n("br"),t._v("\n⑤ 不写版本号而是以*代替，则是安装最新版本"),n("br"),t._v("\n⑥ 对于 node_modules 安装时出错，可以清楚缓存 npm cache clean --force")]),t._v(" "),n("p",[t._v("9、node 模块"),n("br"),t._v("\n① 内置模块：path、http、fs 等 模块有自身的方法"),n("br"),t._v("\n② 第三方模块：jq、react、vue、express、axios 等"),n("br"),t._v("\n③ 自定义模块：代码见本地 新练习 code-node-custom，步骤 npm init -y 生成 package.json, 还需要一个 js 文件用来写逻辑, 注意 js 文件名字要和 package.json 中的 main 字段的名字一致, 用来向外暴露 js 逻辑(这里需要模块化的知识如 commonJS), 比如要引用 lodash,则需要引入这个包；下一步是发布包"),n("br"),t._v("\n步骤：npm adduser(注意切换到 npm 源)、npm publish"),n("br"),t._v("\n出错原因可能是包重名或邮箱未验证")]),t._v(" "),n("p",[t._v("10、npm 源"),n("br"),t._v("\n查看源： npm config get registry"),n("br"),t._v("\n切换源： npm config set registry url")]),t._v(" "),n("h2",{attrs:{id:"eslint-与-prettier"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint-与-prettier"}},[t._v("#")]),t._v(" ESLint 与 Prettier")]),t._v(" "),n("p",[t._v("前者是代码格式检查+js 文件的部分格式化、后者专注于格式化且不局限于 js 文件, 搭配使用")]),t._v(" "),n("h2",{attrs:{id:"模块化规范"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模块化规范"}},[t._v("#")]),t._v(" 模块化规范")]),t._v(" "),n("h3",{attrs:{id:"优点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),n("p",[t._v("1、避免命名冲突"),n("br"),t._v("\n2、更好地分离，按需加载"),n("br"),t._v("\n3、复用性高"),n("br"),t._v("\n4、维护性好")]),t._v(" "),n("h3",{attrs:{id:"分类-发展史"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分类-发展史"}},[t._v("#")]),t._v(" 分类(发展史)")]),t._v(" "),n("p",[t._v("1、单例模式(设计模式)"),n("br"),t._v("\n利用立即执行函数和闭包，将对象暴露出来，供其他地方使用。缺点：项目复杂之后，JS 的导入关系也极其复杂。"),n("br"),t._v("\n2、AMD 规范(requireJS)"),n("br"),t._v("\n专用于浏览器端，异步加载模块。缺点：依赖前置，非按需加载。"),n("br"),t._v("\n暴露模块：define 方法"),n("br"),t._v("\n引入模块：require 方法"),n("br"),t._v("\n3、CommonJS"),n("br"),t._v("\n在服务器端，模块的加载是运行时同步加载的(服务端读取快)；在浏览器端(不能直接在浏览器端执行，这是缺点，后来有了 Browserify)，模块需要提前编译打包处理(因为浏览器不认识 CommonJS 语法如 require)，优点：不用依赖前置，用的时候再导入即可。"),n("br"),t._v("\n暴露模块：module.exports = value / exports.xxx = value。暴露的本质是 exports 对象。第一种暴露是把 value 赋给了 exports 对象，第二种是添加属性。"),n("br"),t._v("\n引入模块：① 内置模块(如 url、http)或第三方模块直接 require(模块名字)② 自定义模块要 require(模块文件相对路径)"),n("br"),t._v("\n4、CMD 规范(seaJS)(淘系)"),n("br"),t._v("\n基于 CommonJS，使其能用于浏览器端，异步加载模块。(按需加载)"),n("br"),t._v("\n5、ES6(应用最广泛,浏览器和服务器通用的模块解决方案)"),n("br"),t._v('\n浏览器端开启 ES6Module，script 标签需要加上 type="module",并且需要基于 HTTP/HTTPS 等标准 Web 协议访问页面。'),n("br"),t._v("\n使用 Babel 将 ES6 转化为浏览器可识别的 ES5，但还包含 require 语法，所以还需要 browserify(babel 还可以将 jsx 转化为 js)"),n("br"),t._v("\n暴露模块：export ① 分别暴露 ② 统一暴露 ③ 默认暴露"),n("br"),t._v("\n引入模块：import ① 通用方式 import * as xx from 'path' ② 解构赋值 ③ 简便形式 import xx from '路径'只能用于默认暴露的情况。"),n("br"),t._v("\n缺点：由于 import 是静态执行，所以不能使用表达式和变量这些只有在运行时才能得到结果的语法结构。"),n("br"),t._v("\n注意：浏览器端想直接用 import, 记得在引入 script 标签的时候加上 type='module'")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'oo'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_module'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" module "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_module'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("6、ES6 模块与 CommonJS 模块的差异"),n("br"),t._v("\n①CommonJS 模块输出的是一个值的拷贝(有缓存)，ES6 模块输出的是值的引用。"),n("br"),t._v("\n②CommonJS 模块是运行时加载(动态加载)，ES6 模块是编译时(解析时)加载("),n("strong",[t._v("静态加载")]),t._v("，效率高)，所以 import 命令有变量提升(这种行为的本质是，import 命令是编译阶段执行的，在代码运行之前)。\n③ 对于简单类型和复杂类型的问题："),n("a",{attrs:{href:"https://github.com/YvetteLau/Step-By-Step/issues/43#issuecomment-509229722",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细"),n("OutboundLink")],1),n("br"),t._v("\ncommonjs 虽然是拷贝，但复杂对象是浅拷贝，修改源数据会影响引入后的数据; esm 虽然是引用，但对于默认导出而言，源文件(导出的文件)里修改简单类型的数据时，并不会影响引入后的数据，可以想成 赋值给 default 之后，只读引用与 default 关联，此时基础类型的变量的任何修改都与 default 无关")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cjs 对于value是复杂类型时是浅拷贝，修改源文件数据会影响新文件数据")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hobbies "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ivan'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hobbies "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'navi'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  hobbies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hobbies "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./a.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hobbies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//['a']")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//['ivan']")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//['ivan']")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hobbies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//['a', 'b']  被成功修改了")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"操作系统"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[t._v("#")]),t._v(" 操作系统")]),t._v(" "),n("h3",{attrs:{id:"死锁"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#死锁"}},[t._v("#")]),t._v(" 死锁")]),t._v(" "),n("ol",[n("li",[t._v("互斥条件：一个资源每次只能被一个进程使用。")]),t._v(" "),n("li",[t._v("请求与保持条件：一个进程因请求资源而阻塞时，对已获得的资源保持不放。")]),t._v(" "),n("li",[t._v("不剥夺条件:进程已获得的资源，在末使用完之前，不能强行剥夺。")]),t._v(" "),n("li",[t._v("循环等待条件:若干进程之间形成一种头尾相接的循环等待资源关系。")])]),t._v(" "),n("h3",{attrs:{id:"进程间通信方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进程间通信方式"}},[t._v("#")]),t._v(" 进程间通信方式")]),t._v(" "),n("p",[t._v("进程（Linux）间的通信方式有：\n1、管道\n2、消息队列\n3、共享内存\n4、信号量\n5、Socket")]),t._v(" "),n("h2",{attrs:{id:"设计模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[t._v("#")]),t._v(" 设计模式")]),t._v(" "),n("p",[t._v("1、工厂模式: 这种方式创建对象缺点是无法识别对象类型\n2、发布订阅模式与观察者模式 "),n("a",{attrs:{href:"https://juejin.cn/post/6847902215571505166#comment",target:"_blank",rel:"noopener noreferrer"}},[t._v("example"),n("OutboundLink")],1),t._v("\n发布/订阅模式由统一调度中心调用，因此发布者和订阅者不需要知道对方的存在。\n观察者模式是由具体目标调度，比如当事件触发，Dep 就会去调用观察者的方法，所以观察者模式的订阅者与发布者之间是存在依赖的。\n3、单例模式\n4、职责链模式\n5、"),n("a",{attrs:{href:"https://www.runoob.com/design-pattern/design-pattern-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MVC 模式"),n("OutboundLink")],1),t._v("\n6、代理模式、装饰模式等, "),n("a",{attrs:{href:"https://juejin.cn/post/6844904190947360781#comment",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"职责链模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#职责链模式"}},[t._v("#")]),t._v(" 职责链模式")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode-cn.com/problems/integer-to-roman/",target:"_blank",rel:"noopener noreferrer"}},[t._v("12. 整数转罗马数字"),n("OutboundLink")],1),t._v("\n从这道题的官解和普通解之间的对比，可以更好地理解职责链模式，该模式可以解决面条式代码。")]),t._v(" "),n("h3",{attrs:{id:"单例模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#单例模式"}},[t._v("#")]),t._v(" 单例模式")]),t._v(" "),n("p",[t._v("保证系统中，应用该模式的类一个类只有一个实例，即一个类只有一个对象实例")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文件1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("judge")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" f "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      f "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("F")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("judge")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文件2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" jg "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./judge.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"计算机基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#计算机基础"}},[t._v("#")]),t._v(" 计算机基础")]),t._v(" "),n("p",[t._v("1、二进制表示"),n("br"),t._v("\n① 正负数用补码来表示，正数的补码就是原码；负数的补码是正数的原码的反码再加 1。也适用(n & 1) === 0 来看奇偶。"),n("br"),t._v("\n② 二进制转十进制是求幂，十进制转二进制是求余数再反过来拼接到一起。")]),t._v(" "),n("p",[t._v("2、Base64 编码规则")]),t._v(" "),n("h2",{attrs:{id:"正则表达式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),n("p",[t._v("1、匹配手机号")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^1[3-9][0-9]{9}$")]),n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{9}表示前面的表达式出现9次")]),t._v("\n")])])]),n("p",[t._v("2、\\w 与\\W"),n("br"),t._v('\n小写\\w：匹配包括下划线的任何单词字符。类似但不等价于“[A-Za-z0-9_]”，这里的"单词"字符使用 Unicode 字符集。'),n("br"),t._v("\n大写\\W：匹配任何非单词字符。等价于“[^a-za-z0-9_]”。")]),t._v(" "),n("h2",{attrs:{id:"cdn-内容分发网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cdn-内容分发网络"}},[t._v("#")]),t._v(" CDN 内容分发网络")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://www.zhihu.com/question/320489602/answer/683562496",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细"),n("OutboundLink")],1),t._v("\nCNAME 就是域名的别名；CDN 主要用来存储静态资源；\n由域名服务器和多个代理服务器组成，优势："),n("br"),t._v("\n1、距离最近的服务器(CDN 节点)进行响应 降低页面响应时间"),n("br"),t._v("\n2、前端性能优化，实际项目里的静态资源比如图片就存储在 cdn 上"),n("br"),t._v("\n3、cdn 不仅可以缓存资源，并且某个服务器瘫痪，可以有其他服务器进行响应"),n("br"),t._v("\n4、域名不能和源站一致：用户访问加速域名的网站资源，当 CDN 节点上没有缓存对应的内容时，CDN 节点会回到源站获取，然后再返回给用户。如果源站域名与加速域名一致，将会造成访问请求反复解析到 CDN 节点，导致 CDN 节点无法回源拉取请求内容。其次减少了 静态资源 cookie 的发送"),n("br"),t._v(" "),n("a",{attrs:{href:"https://www.cnblogs.com/tinywan/p/6207336.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CNAME"),n("OutboundLink")],1)]),t._v(" "),n("h2",{attrs:{id:"代码规范"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码规范"}},[t._v("#")]),t._v(" 代码规范")]),t._v(" "),n("p",[t._v("1、if else 多个 return 是多余的"),n("br"),t._v("\n2、const 优先"),n("br"),t._v("\n3、三个等号")])])}),[],!1,null,null,null);s.default=e.exports}}]);