(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{487:function(t,a,s){"use strict";s.r(a);var r=s(23),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数据库相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库相关"}},[t._v("#")]),t._v(" 数据库相关")]),t._v(" "),s("h2",{attrs:{id:"基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),s("p",[t._v("DB：database，数据库。DB 是通过 DBMS 创建和操作的容器。"),s("br"),t._v("\nDBMS：数据库管理系统，即数据库软件，用于管理 DB 中的数据。比如 MySQL、Oracle、DB2、MongoDB……"),s("br"),t._v("\nSQL：结构化查询语言，用来操作数据库，与数据库通信的语言。"),s("br"),t._v("\n关系型：MySQL、Oracle、SQL Server 等，关系型数据库是将数据存放在表中(?)"),s("br"),t._v("\n非关系型(NoSQL)：Redis、MongoDB 等，存放在文档中(?)"),s("br"),t._v("\n如：MongoDB 将数据存储为一个文档，数据结构由键值(key=>value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。")]),t._v(" "),s("h2",{attrs:{id:"初识-sql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初识-sql"}},[t._v("#")]),t._v(" 初识 SQL")]),t._v(" "),s("p",[t._v("1、启用和停止：可以通过任务管理器或者 cmd(管理员身份)输入 net start/stop mysql(自己数据库名字)"),s("br"),t._v("\n2、SQL 基本概念：一个关系即一个表, 一个元组即一行, 一个属性即一列"),s("br"),t._v("\n3、SQL 基本语法 略 "),s("a",{attrs:{href:"https://www.cnblogs.com/lrhya/p/12534561.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("主键和外键"),s("OutboundLink")],1),s("br"),t._v("\n4、例题："),s("br"),t._v("\n数据库中两张表 tab1、tab2，tab1 中有字段：id、name，tab2 中有字段：id、score、class，两张表以 id 字段作为外键关联，用一个 sql 语句找到名字为“navi”的人对应的班级和分数？")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" score"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("class "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tab2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tab1 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"navi"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- sql里大小写无所谓")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- select from 是数据库里的查询语法")]),t._v("\n")])])]),s("p",[t._v("5、"),s("a",{attrs:{href:"https://www.cnblogs.com/linjiqin/archive/2012/04/01/2428695.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("三范式"),s("OutboundLink")],1),s("br"),t._v("\n第一范式(确保每列保持原子性), 所有字段值都是不可分解的原子值"),s("br"),t._v("\n第二范式(确保表中的每列都和主键相关)"),s("br"),t._v("\n第三范式(确保每列都和主键列直接相关,而不是间接相关)")]),t._v(" "),s("h2",{attrs:{id:"mongodb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mongodb"}},[t._v("#")]),t._v(" MongoDB")]),t._v(" "),s("h3",{attrs:{id:"语法对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法对比"}},[t._v("#")]),t._v(" 语法对比")]),t._v(" "),s("p",[t._v("SQL: 表、行、列、主键"),s("br"),t._v("\n对应着："),s("br"),t._v("\nMongo: 集合、文档、字段、对象 ID")]),t._v(" "),s("h3",{attrs:{id:"操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作"}},[t._v("#")]),t._v(" 操作")]),t._v(" "),s("p",[t._v("1、数据库操作"),s("br"),t._v("\n创建数据库: use demo"),s("br"),t._v("\n查看数据库: show dbs"),s("br"),t._v("\n删除数据库: db.dropDatabase()\n2、集合操作"),s("br"),t._v("\n创建集合: db.createCollection(name)"),s("br"),t._v("\n查看集合: show collections"),s("br"),t._v("\n删除集合: db.collection.drop()\n3、文档(行)操作:"),s("br"),t._v("\n创建、查看、删除、更新等等")]),t._v(" "),s("h2",{attrs:{id:"計算機組成原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#計算機組成原理"}},[t._v("#")]),t._v(" 計算機組成原理")]),t._v(" "),s("p",[t._v("讲什么：计算机硬件逻辑实现"),s("br"),t._v("\n1、基本部件的结构和组织方式"),s("br"),t._v("\n2、基本运算的操作原理"),s("br"),t._v("\n3、基本部件和单元的设计思想")]),t._v(" "),s("h3",{attrs:{id:"原码反码补码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原码反码补码"}},[t._v("#")]),t._v(" 原码反码补码")]),t._v(" "),s("p",[t._v("1、对于正数来说,其二进制原码,反码,补码均为相同的,为原码的形式"),s("br"),t._v("\n2、对于负数来说,其反码为符号位保持不变,其余各位取反,其反码为符号位保持不变,其余各位取反。(0 正 1 负)"),s("br"),t._v("\n3、补码就是负数在计算机中的二进制表示方法。补码是反码加 1。"),s("br"),t._v("\n3、无符号右移>>>: -2>>>1，结果是 2147483647"),s("br"),t._v("\n4、有符号右移>>: 4>>1，结果为 2、-4>>1，结果为-2、-2>>1，结果是-1"),s("br"),t._v("\n5、对于正数而言，>>和>>>没有区别。")]),t._v(" "),s("h3",{attrs:{id:"數組為什麼從-0-開始索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#數組為什麼從-0-開始索引"}},[t._v("#")]),t._v(" 數組為什麼從 0 開始索引")]),t._v(" "),s("p",[t._v("因为索引表示地址偏移，第 0 项偏移为 0，第 1 项偏移就为 1。如果从 1 开始，则多了一次减法指令")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 尋址公式")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("_address "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base_address "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" data_type_size\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果從1開始，公式如下，CPU會多計算一次")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("_address "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base_address "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" data_type_size\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);